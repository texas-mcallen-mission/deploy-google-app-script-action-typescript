name: Deploy Via CLASP

on:
  workflow_call:
    inputs:
      github_data:
        required: true
        type: string
    secrets:
      # CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}
      CLASPRC_JSON:
        required: true
        # type: string
      # token: ${{ secrets.REPO_ACCESS_TOKEN }}
      REPO_ACCESS_TOKEN:
        required: true
      # DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}
      DEPLOYMENT_ID:
        required: true
        # type: string
      # SCRIPT_ID: ${{secrets.SCRIPT_ID}}
      SCRIPT_ID:
        required: false # but ***STRONGLY*** RECOMMENDED!
        # type: string
      # PARENT_ID: ${{secrets.PARENT_ID}}
      PARENT_ID:
        required: false
        # type: string
      # CONFIG_DATA: ${{ secrets.CONFIG_JSON }}
      CONFIG_DATA:
        required: false
        # type: string



jobs:
  reusable_workflow_job:
    runs-on: ubuntu-latest

    steps:
      - name: Install clasp
        id: install-clasp
        run: sudo npm install @google/clasp@2.4.1 -g

      - name: Write CLASPRC_JSON secret to .clasprc.json file
        id: write-clasprc
        run: echo "$CLASPRC_JSON_SECRET" >> ~/.clasprc.json
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC_JSON }}

      - name: Check clasp login status
        id: clasp_login
        run: clasp login --status

      - name: Save current .clasprc.json contents to CLASPRC_JSON_FILE environment variable
        id: save-clasprc
        run: |
          echo ::add-mask::$(tr -d '\n\r' < ~/.clasprc.json)
          echo "CLASPRC_JSON_FILE=$(tr -d '\n\r' < ~/.clasprc.json)" >> $GITHUB_ENV        
      
      - name: Save CLASPRC_JSON_FILE environment variable to CLASPRC_JSON repo secret
        id: set-clasprc-secret
        if: ${{ env.CLASPRC_JSON_FILE != env.CLASPRC_JSON_SECRET  }}
        uses: hmanzur/actions-set-secret@v2.0.0
        env:
          CLASPRC_JSON_SECRET: ${{ secrets.CLASPRC }}
        with:
          name: "CLASPRC_JSON"
          value: ${{ env.CLASPRC_JSON_FILE }}
          repository: ${{ github.repository }}
          token: ${{ secrets.REPO_ACCESS_TOKEN }}

      - name: Checkout repo
        id: checkout-repo
        if: ${{github.event_name	!= 'schedule' }}
        uses: actions/checkout@v2

      - name: Set scriptId in .clasp.json file
        id: set-script-id
        if: ${{ github.event_name	!= 'schedule' && env.SCRIPT_ID}}
        run: jq '.scriptId = "${{env.SCRIPT_ID}}"' .clasp.json > /tmp/.clasp.json && mv /tmp/.clasp.json .clasp.json
        env:
          SCRIPT_ID: ${{secrets.SCRIPT_ID}}

      - name: Set parentId in .clasp.json file
        id: set-parent-id
        if: ${{ github.event_name	!= 'schedule' && env.PARENT_ID}}
        run: jq '.parentId = "[${{env.PARENT_ID}}]"' .clasp.json > /tmp/.clasp.json && mv /tmp/.clasp.json .clasp.json
        env:
          PARENT_ID: ${{secrets.PARENT_ID}}

    # Somewhere in here: push in github commit number and information to a stubby information js file

      # read the guide at docs/ci-setup.md!
      - name: update git-info.js
        id: modify-git-info
        run: >
          sed -ibak -e 's/COMMITSHA/$COMMIT_SHA/g;
          s/REFNAME/$GITHUB_REF_NAME/g;
          s/COMMITACTOR/$COMMIT_ACTOR/g;
          s/EVENTNAME/$EVENT_NAME/g;
          s/JOBID/$GITHUB_JOB/g;
          s|//SECRET_DATA|$CONFIG_DATA|g;
          s|GITHUBREPOSITORY|$GITHUB_REPOSITORY|g' git-info.js
        env:
          COMMIT_SHA: ${{ github.sha }}
          EVENT_NAME: ${{ github.event_name }}
          COMMIT_ACTOR: ${{ github.actor }}
          GITHUB_JOB: ${{ github.job }}
          GITHUB_REPOSITORY: ${{ github.repository }} 
          GITHUB_REF_NAME: ${{ github.ref_name }}
          CONFIG_DATA: ${{ secrets.CONFIG_JSON }}
          # 🐧

      # - name: Add Config data from Secret
      #   id: set-config-data
      #   # if: [[ -n ${{ env.CONFIG_JSON }} 
      #   run: >
      #     sed -ibak -e "s|//SECRET_DATA|$CONFIG_DATA|g" git-info.js
      #   env:
      #     CONFIG_DATA: ${{ secrets.CONFIG_JSON }}

      - name: Push script to scripts.google.com
        id: clasp-push
        if: ${{ github.event_name	!= 'schedule'}}
        run: clasp push -f

      - name: Deploy Script
        id: clasp-deploy
        if: ${{env.DEPLOYMENT_ID && (github.event_name == 'release' || (github.event_name == 'push' && github.ref == 'refs/heads/main'))}}
        run: clasp deploy -i "$DEPLOYMENT_ID" -d "$GITHUB_REF"
        env:
          DEPLOYMENT_ID: ${{ secrets.DEPLOYMENT_ID }}